name: Build and push docker image
on:
  workflow_dispatch:
  push:
    paths:
      - confFiles/**
      - .github/workflows/docker_build.yml
jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix_include: ${{ steps.dockerxparams.outputs.matrix_include }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          submodules: true
      - name: Define matrix params
        id: dockerxparams
        run: |
          PAIRS=(
            "confFiles/multiStage.Dockerfile:alexandermey/distirbutedmastservice:env1",
            "confFiles/collectMetrics.Dockerfile:alexandermey/distirbutedmastservice:metrics"
          )

          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD -- confFiles/)
          

          echo "Changed files: $CHANGED_FILES"
          
          
          FILTERED_PAIRS=()
          for pair in "${PAIRS[@]}"; do
            DF="${pair%%:*}"
            TAG="${pair#*:}"

            if echo "$CHANGED_FILES" | grep -q "^$DF$"; then
              FILTERED_PAIRS+=("{\"dockerfile\": \"$DF\", \"tags\": \"$TAG\"}")
            fi
          done
          
          for pair in "${FILTERED_PAIRS[@]}";
          do
            echo ${pair}
          done

          echo "matrix_include=[$(IFS=,; echo "${FILTERED_PAIRS[*]}")]" >> "$GITHUB_OUTPUT"
          
          echo "matrix_include=[$(IFS=,; echo "${FILTERED_PAIRS[*]}")]"

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: define-matrix
    if: ${{ needs.define-matrix.outputs.matrix_include != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.define-matrix.outputs.matrix_include) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ matrix.tags}}