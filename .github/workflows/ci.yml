name: Build and test

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/ci.yml
      - computationalLib/**
      - utilLib/**
      - computationalNode/**
      - mainNode/**
      - CMakeLists.txt
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      host: http://rabbitmq:15672
      pghost: http://postgres:5432
      username: sysadmin
      password: syspassword
      coverageD: build-cov
    services:
      rabbitmq:
        image: rabbitmq:4-management
        env:
          RABBITMQ_DEFAULT_USER: ${{ env.username }}
          RABBITMQ_DEFAULT_PASS: ${{ env.password }}
        ports:
          - 5672:5672
          - 15672:15672
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ env.username }}
          POSTGRES_PASSWORD: ${{ env.password }}
        ports:
          - "5501:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    container:
      image: alexandermey/distirbutedmastservice:env1
    steps:
      - name: LoadTools
        run: |
          apt-get update
          apt-get install -y lcov
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ./src
      - name: Build
        run: |
          cp -r src/res/ res/
          
          mkdir build && cd build
          
          export HOST_PARAMS="$host $username $password"
          export HOST_PARAMS_DB="$pghost $username $password"
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release  \
          ../src/
          ninja
      - name: Save build
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: /__w/distributedMathArh/distributedMathArh/build
          if-no-files-found: warn
          include-hidden-files: true
      - name: Run tests
        run: |
          
          mkdir $coverageD && cd $coverageD
          
          export HOST_PARAMS="$host $username $password"
          
          export HOST_PARAMS_DB="$pghost $username $password"
          
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release-Coverage  \
          ../src/
          ctest -T Build -T Test --output-on-failure

      - name: Collect coverage
        if: success() || failure()
        run: |
          cd ${GITHUB_WORKSPACE}/src
          mypath=$(pwd)/*
          
          cd ..
          
          mkdir cov_report && cd cov_report
          
          lcov -t "project_cov" -o project_cov.info -c -d ../$coverageD/
          
          lcov --extract project_cov.info "$mypath" -o project_cov_mycode.info
          
          lcov --remove project_cov_mycode.info '*/test/*' -o project_cov_source.info
          
          genhtml -o report project_cov_source.info

      - name: Save coverage report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: /__w/distributedMathArh/distributedMathArh/cov_report
          if-no-files-found: warn
          include-hidden-files: true
